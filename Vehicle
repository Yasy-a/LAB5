using System;
using System.Collections.Generic;

// Абстрактний клас Транспортний Засіб
public abstract class Vehicle
{
    public int Speed { get; set; }
    public int Capacity { get; set; }

    public abstract void Move();
}

// Клас Людина
public class Human
{
    public int Speed { get; set; }

    public void Move()
    {
        Console.WriteLine("Human is moving.");
    }
}

// Клас Машина
public class Car : Vehicle
{
    public override void Move()
    {
        Console.WriteLine("Car is moving.");
    }
}

// Клас Автобус
public class Bus : Vehicle
{
    public override void Move()
    {
        Console.WriteLine("Bus is moving.");
    }
}

// Клас Поїзд
public class Train : Vehicle
{
    public override void Move()
    {
        Console.WriteLine("Train is moving.");
    }
}

// Клас Маршрут
public class Route
{
    public string StartPoint { get; set; }
    public string EndPoint { get; set; }
}

// Клас Транспортна Мережа
public class TransportNetwork
{
    private List<Vehicle> vehicles = new List<Vehicle>();

    public void AddVehicle(Vehicle vehicle)
    {
        vehicles.Add(vehicle);
    }

    public void ControlMovement()
    {
        foreach (var vehicle in vehicles)
        {
            vehicle.Move();
        }
    }

    public void CalculateOptimalRoute(Vehicle vehicle, Route route)
    {
        // Додайте розрахунок оптимального маршруту для різних видів транспорту тут
        Console.WriteLine($"Calculating optimal route for {vehicle.GetType().Name} from {route.StartPoint} to {route.EndPoint}.");
    }
}

class Program
{
    static void Main()
    {
        TransportNetwork network = new TransportNetwork();

        Car car = new Car();
        car.Speed = 100;
        car.Capacity = 4;

        Bus bus = new Bus();
        bus.Speed = 60;
        bus.Capacity = 30;

        Train train = new Train();
        train.Speed = 120;
        train.Capacity = 200;

        network.AddVehicle(car);
        network.AddVehicle(bus);
        network.AddVehicle(train);

        network.ControlMovement();

        Route route = new Route
        {
            StartPoint = "City A",
            EndPoint = "City B"
        };

        network.CalculateOptimalRoute(car, route);
        network.CalculateOptimalRoute(bus, route);
        network.CalculateOptimalRoute(train, route);
    }
}
